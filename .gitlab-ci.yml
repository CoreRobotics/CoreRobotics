image: camerondevine/corerobotics:latest

stages:
 - wrap
 - build
 - test
 - deploy

python-wrappers:
  stage: wrap
  script:
   - mkdir build
   - cd build
   - cmake ../ -Dpython=only-swig
   - make
  artifacts:
    name: python-wrappers-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/python/swig/CoreRoboticsPYTHON_wrap.cxx
     - $CI_PROJECT_DIR/python/lib/CoreRobotics.py
    expire_in: 1 week

matlab-wrappers:
  stage: wrap
  script:
   - mkdir build
   - cd build
   - cmake ../ -Dmatlab=only-swig
   - make
  artifacts:
    name: matlab-wrappers-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/matlab/swig/CoreRoboticsMATLAB_wrap.cxx
     - $CI_PROJECT_DIR/matlab/lib/*.m
     - $CI_PROJECT_DIR/matlab/lib/+CoreRobotics/*.m
    expire_in: 1 week

build-cpp:
  stage: build
  script: 
   - mkdir build
   - cd build
   - cmake ../
   - make
  artifacts:
    name: cpp-bin-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/bin/TestModules
    expire_in: 1 week

build-python2:
  stage: build
  script:
   - mkdir build
   - cd build
   - cmake ../ -Dpython=2
   - make
  artifacts:
    name: python2-bin-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/python/lib/_CoreRobotics.so
    expire_in: 1 week

build-python3:
  stage: build
  script:
   - mkdir build
   - cd build
   - cmake ../ -Dpython=3
   - make
  artifacts:
    name: python3-bin-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/python/lib/_CoreRobotics.so
    expire_in: 1 week

build-python2-noswig:
  stage: build
  script:
   - mkdir build
   - cd build
   - cmake ../ -Dpython=2 -Dnoswig=true
   - make
  dependencies:
   - python-wrappers-$CI_COMMIT_SHA
  artifacts:
    name: python2-noswig-bin-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/python/lib/_CoreRobotics.so
    expire_in: 1 week

build-python3-noswig:
  stage: build
  script:
   - mkdir build
   - cd build
   - cmake ../ -Dpython=3 -Dnoswig=true
   - make
  dependencies:
   - python-wrappers-$CI_COMMIT_SHA
  artifacts:
    name: python3-noswig-bin-$CI_COMMIT_SHA
    paths:
     - $CI_PROJECT_DIR/python/lib/_CoreRobotics.so
    expire_in: 1 week

test-cpp:
  stage: test
  script:
   - $CI_PROJECT_DIR/bin/TestModules
  dependencies:
   - cpp-bin-$CI_COMMIT_SHA

test-python2:
  stage: test
  script:
   - cd $CI_PROJECT_DIR/python/util
   - python2 CRTestModules.py
  dependencies:
   - python2-bin-$CI_COMMIT_SHA

test-python3:
  stage: test
  script:
   - cd $CI_PROJECT_DIR/python/util
   - python3 CRTestModules.py
  dependencies:
   - python3-bin-$CI_COMMIT_SHA

test-python2-noswig:
  stage: test
  script:
   - cd $CI_PROJECT_DIR/python/util
   - python2 CRTestModules.py
  dependencies:
   - python2-noswig-bin-$CI_COMMIT_SHA

test-python3-noswig:
  stage: test
  script:
   - cd $CI_PROJECT_DIR/python/util
   - python3 CRTestModules.py
  dependencies:
   - python3-noswig-bin-$CI_COMMIT_SHA

deploy-python-wrappers:
  stage: deploy
  script:
   - eval $(ssh-agent -s)
   - ssh-add <(echo "$SSH_PRIVATE_KEY")
   - mkdir -p ~/.ssh
   - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
   - cd $CI_PROJECT_DIR
   - if [[ -n $(git status -s) ]]; then
   - git config user.email "$GITLAB_USER_EMAIL"
   - git config user.name "$GITLAB_USER_NAME"
   - git add python/swig/CoreRoboticsPYTHON_wrap.cxx
   - git add python/lib/CoreRobotics.py
   - git stash
   - git remote add ssh git@gitlab.com:$CI_PROJECT_PATH.git
   - git fetch ssh $CI_COMMIT_REF_NAME
   - git checkout ssh/$CI_COMMIT_REF_NAME
   - git stash apply
   - git add python/swig/CoreRoboticsPYTHON_wrap.cxx
   - git add python/lib/CoreRobotics.py
   - git commit -m "python swig wrappers [ci skip]"
   - git push ssh HEAD:$CI_COMMIT_REF_NAME
   - fi
  dependencies:
   - python-wrappers-$CI_COMMIT_SHA
  allow_failure: true

deploy-matlab-wrappers:
  stage: deploy
  script:
   - eval $(ssh-agent -s)
   - ssh-add <(echo "$SSH_PRIVATE_KEY")
   - mkdir -p ~/.ssh
   - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
   - cd $CI_PROJECT_DIR
   - if [[ -n $(git status -s) ]]; then
   - git config user.email "$GITLAB_USER_EMAIL"
   - git config user.name "$GITLAB_USER_NAME"
   - git add matlab/swig/CoreRoboticsMATLAB_wrap.cxx
   - git add matlab/lib/+CoreRobotics/*
   - git stash
   - git remote add ssh git@gitlab.com:$CI_PROJECT_PATH.git
   - git fetch ssh $CI_COMMIT_REF_NAME
   - git checkout ssh/$CI_COMMIT_REF_NAME
   - git stash apply
   - git add matlab/swig/CoreRoboticsMATLAB_wrap.cxx
   - git add matlab/lib/+CoreRobotics/*
   - git commit -m "matlab swig wrappers [ci skip]"
   - git push ssh HEAD:$CI_COMMIT_REF_NAME
   - fi
  dependencies:
   - matlab-wrappers-$CI_COMMIT_SHA
  allow_failure: true
